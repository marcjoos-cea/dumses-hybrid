#===============================================================================
# This Makefile was automatically generated by ./configure
#===============================================================================
# Echo variables for fancy outputs
#===============================================================================
bold  = $(shell tput bold)
reset = $(shell tput sgr0)

# Preprocessor variables
#===============================================================================
NDIM  = 3
ISO   = 0
GEOM  = cartesian
MPI   = 1
HDF5  = 0
PHDF5 = 0
PNCDF = 0
PGIFC = 1
OACC  = 1
RDMA  = 1
NCCL  = 1

# Problem directory
#===============================================================================
PROBLEM = src/problem/magnetic_loop

# WARNING: do not modify Makefile behind this point; all modifications will be
# done at your own risk.
#===============================================================================
# Compiler and flags
#===============================================================================
F90      = mpif90 
FFLAGS   = -O0 -acc=gpu,host -gpu=cc70 -Minfo=all -Minline
ifeq ($(NCCL),1)
FFLAGS  += -cudalib=nccl
endif
CPPFLAGS = -Mpreprocess
MODFLAGS = -module $(BINDIR)
PHYFLAGS = -DPNCDF=$(PNCDF) -DHDF5=$(HDF5) -DPHDF5=$(PHDF5) -DNDIM=$(NDIM) -DISO=$(ISO) -DMPI=$(MPI) -DPGIFC=$(PGIFC) -DGEOM=$(GEOM) -DCARTESIAN=1 -DCYLINDRICAL=2 -DSPHERICAL=3
PHYFLAGS += -DOACC=$(OACC) -DRDMA=$(RDMA) -DNCCL=$(NCCL)
ifeq ($(MPI),1)
MPIINC   = 
MPILIB   = 
endif  
ifeq ($(HDF5),1)
HDFINC   = -I/include/
HDFLIB   = -L/lib -lhdf5_fortran -lhdf5 -lz
endif
ifeq ($(PHDF5),1)
HDFINC   = -I/include/
HDFLIB   = -L/lib -lhdf5_fortran -lhdf5 -lz -ldl
endif
ifeq ($(PNCDF),1)
CDFINC   = -I/include/
CDFLIB   = -L/lib -lpnetcdf
endif
LIBFLAGS = $(MPIINC) $(HDFINC) $(CDFINC) -I$(BINDIR)
FLAGS    = $(FFLAGS) $(PHYFLAGS)
ALLFLAGS = $(LIBFLAGS) $(CPPFLAGS) $(FLAGS)
ALLLIBS  = $(HDFLIB) $(CDFLIB) $(MPILIB)
BINOBJ   = $(addprefix $(BINDIR)/, $(sort $(notdir $(ALLOBJ))))

# Set the right flag for geometry
#===============================================================================
ifeq ($(GEOM), cartesian)
GEOM = 1
else
ifeq ($(GEOM), cylindrical)
GEOM = 2
else
ifeq ($(GEOM), spherical)
GEOM = 3
else
$(error "Unknown geometry option!")
endif
endif
endif

# Sources, modules and binaries directories
#===============================================================================
SRCDIR  = src
PRBDIR  = $(PROBLEM)
MODDIR  = $(SRCDIR)/modules
SMODDIR = $(dir $(wildcard $(MODDIR)/*/.))
SUBDIR  = $(SRCDIR)/subroutines
USRDIR  = $(SRCDIR)/userfiles
ifeq ("$(wildcard $(PRBDIR)/modules)","")
PRMDIR  =
else
PRMDIR  = $(PRBDIR)/modules
endif
BINDIR  = bin

VPATH     = $(SRCDIR):$(MODDIR):$(SMODDIR):$(SUBDIR):$(PRBDIR):$(USRDIR)

MODFILES  = $(wildcard $(MODDIR)/*f90)
MODOBJ    = $(notdir $(MODFILES:.f90=.o))
SMODFILES = $(foreach smoddir, $(SMODDIR), $(wildcard $(smoddir)*f90))
SMODOBJ   = $(foreach smodobj, $(notdir $(SMODFILES:.f90=.o)), $(BINDIR)/$(smodobj))
SMODOBJ   = $(notdir $(SMODFILES:.f90=.o))
# >
#ifneq ("$(PRMDIR)","")
#PRMFILES  = $(wildcard $(PRMDIR)/*f90)
#PRMOBJ    = $(join $(addsuffix $(PRMFROMBIN)/, $(dir $(PRMFILES))), \
#	  $(notdir $(PRMFILES:.f90=.o)))
#endif
# < don't forget to re-add it
PRBFILES  = $(wildcard $(PRBDIR)/*f90)
PRBOBJ    = $(notdir $(PRBFILES:.f90=.o))
SUBFILES  = $(wildcard $(SUBDIR)/*f90)
SUBOBJ    = $(notdir $(SUBFILES:.f90=.o))
USRFILES  = $(wildcard $(USRDIR)/*f90)
USROBJ    = $(notdir $(USRFILES:.f90=.o))
SRCFILES  = $(wildcard $(SRCDIR)/*f90)
SRCOBJ    = $(notdir $(SRCFILES:.f90=.o))
ALL       = $(MODOBJ) $(SMODOBJ) $(PRMOBJ) $(PRBOBJ) $(SUBOBJ) $(USROBJ) $(SRCOBJ)
ALLOBJ    = $(foreach obj, $(ALL), $(BINDIR)/$(obj))

# Compilation rules
#== all: compile main program ==================================================
all: dumses
#== Generic rule ===============================================================
$(BINDIR)/%.o: %.f90
	$(F90) $(ALLFLAGS) -c $< -o $@ $(MODFLAGS)
#== Main program ===============================================================
dumses: $(ALLOBJ)
	@echo "> $(bold)Compiling main program...$(reset)"
	$(F90) $(FLAGS) -o ./bin/dumses $(BINOBJ) $(ALLLIBS)
	@echo "> $(bold)Compilation successful!$(reset)"
	@echo " "
	@echo "> $(bold)Please copy in your run directory the following files$(reset): "
	@echo "   - "$(PROBLEM)"/input"
	@echo "   - "$(BINDIR)"/dumses"
#== Cleaning rules =============================================================
clean:
	@echo "> $(bold)Cleaning bin/ and tmp/ directories...$(reset)"
	rm -rf tmp/*
	rm bin/*.o bin/*.mod 
shallow_clean:
	@echo "> $(bold)Cleaning bin/ directory...$(reset)"
	rm bin/*.o bin/*.mod 
#== debug ======================================================================
debug:
	@echo "ALLOBJ: "
	@echo "$(ALLOBJ)"
	@echo "BINOBJ: "
	@echo "$(BINOBJ)"
#===============================================================================
